// <auto-generated />
using GreenFlamingosApp.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenFlamingosApp.DataBase.Migrations
{
    [DbContext(typeof(GreenFlamingosDbContext))]
    [Migration("20221217131932_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GreenFlamingos.Model.Drinks.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("AlcoholContent")
                        .HasColumnType("real");

                    b.Property<float>("AverageRating")
                        .HasColumnType("real");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrinkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IngredientsId")
                        .HasColumnType("int");

                    b.Property<int>("MainIngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("PreparationsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("GreenFlamingos.Model.MainIngredinet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.Property<string>("DrinkMainIngredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrinkId")
                        .IsUnique();

                    b.ToTable("MainIngredients");
                });

            modelBuilder.Entity("GreenFlamingos.Model.Preparation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.Property<string>("DrinkPreparations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrinkId");

                    b.ToTable("Preparations");
                });

            modelBuilder.Entity("GreenFlamingos.Model.MainIngredinet", b =>
                {
                    b.HasOne("GreenFlamingos.Model.Drinks.Drink", "Drink")
                        .WithOne("MainIngredient")
                        .HasForeignKey("GreenFlamingos.Model.MainIngredinet", "DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");
                });

            modelBuilder.Entity("GreenFlamingos.Model.Preparation", b =>
                {
                    b.HasOne("GreenFlamingos.Model.Drinks.Drink", "Drink")
                        .WithMany("Preparations")
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");
                });

            modelBuilder.Entity("GreenFlamingos.Model.Drinks.Drink", b =>
                {
                    b.Navigation("MainIngredient")
                        .IsRequired();

                    b.Navigation("Preparations");
                });
#pragma warning restore 612, 618
        }
    }
}
