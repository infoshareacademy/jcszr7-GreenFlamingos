// <auto-generated />
using System;
using GreenFlamingosApp.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenFlamingosApp.DataBase.Migrations
{
    [DbContext(typeof(GreenFlamingosDbContext))]
    [Migration("20230104130256_FirstTableSeed")]
    partial class FirstTableSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbDrink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("AlcoholContent")
                        .HasColumnType("real");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrinkTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainIngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preparations")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("DrinkTypeId");

                    b.HasIndex("MainIngredientId");

                    b.ToTable("DbDrinks");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbDrinkIngredient", b =>
                {
                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientCapacity")
                        .HasColumnType("int");

                    b.HasKey("DrinkId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("DbDrinkIngredient");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbDrinkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DrinkTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drink z alkoholem"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Shot"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drink bezalkoholowy"
                        });
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbDrinkUser", b =>
                {
                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("DrinkId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("DbDrinkUser");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DbDrinkId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DbDrinkId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wódka"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rum"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Whisky"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kostki lodu"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Woda"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sok Pomarańczowy"
                        });
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbMainIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DbMainIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wódka"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rum"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Whisky"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sok pomidorowy"
                        });
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserMail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbUserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UsersDetails");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbDrink", b =>
                {
                    b.HasOne("GreenFlamingosApp.DataBase.DbModels.DbUser", "Author")
                        .WithMany("Drinks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenFlamingosApp.DataBase.DbModels.DbDrinkType", "DrinkType")
                        .WithMany()
                        .HasForeignKey("DrinkTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenFlamingosApp.DataBase.DbModels.DbMainIngredient", "MainIngredient")
                        .WithMany()
                        .HasForeignKey("MainIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("DrinkType");

                    b.Navigation("MainIngredient");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbDrinkIngredient", b =>
                {
                    b.HasOne("GreenFlamingosApp.DataBase.DbModels.DbDrink", "Drink")
                        .WithMany("DrinkIngredients")
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenFlamingosApp.DataBase.DbModels.DbIngredient", "Ingredient")
                        .WithMany("DrinkIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbDrinkUser", b =>
                {
                    b.HasOne("GreenFlamingosApp.DataBase.DbModels.DbDrink", "Drink")
                        .WithMany("DrinsUsers")
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenFlamingosApp.DataBase.DbModels.DbUser", "User")
                        .WithMany("DrinksUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbIngredient", b =>
                {
                    b.HasOne("GreenFlamingosApp.DataBase.DbModels.DbDrink", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("DbDrinkId");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbUserDetails", b =>
                {
                    b.HasOne("GreenFlamingosApp.DataBase.DbModels.DbUser", "User")
                        .WithOne("UserDetails")
                        .HasForeignKey("GreenFlamingosApp.DataBase.DbModels.DbUserDetails", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbDrink", b =>
                {
                    b.Navigation("DrinkIngredients");

                    b.Navigation("DrinsUsers");

                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbIngredient", b =>
                {
                    b.Navigation("DrinkIngredients");
                });

            modelBuilder.Entity("GreenFlamingosApp.DataBase.DbModels.DbUser", b =>
                {
                    b.Navigation("Drinks");

                    b.Navigation("DrinksUsers");

                    b.Navigation("UserDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
